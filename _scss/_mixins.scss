/*--------------------------------------------------------------------------

  Clearfix

  Usage: @include clearfix;

--------------------------------------------------------------------------*/

@mixin clearfix {
	*zoom: 1;
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}


/*--------------------------------------------------------------------------

  Handy stuff

  Usage: @include image-replace(WIDTHpx,HEIGHTpx);

--------------------------------------------------------------------------*/

// Image Replacement
@mixin image-replace($width, $height) {
	width: $width;
	height: $height;
	display: block;
	text-indent: -999em;
	overflow: hidden;
	background-repeat: no-repeat;
	text-align: left;
	direction: ltr;
}

// Image Replacement (modern)

@mixin ir {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}




// Hide only visually, but have it available for screenreaders: by Jon Neal.

@mixin vh {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	// Allow the element to be focusable when navigated to via the keyboard: drupal.org/node/897638
	&.focusable:active,
	&.focusable:focus {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto;
	}
}


/*--------------------------------------------------------------------------
	Vertical align anything!
	http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
	Requires the height of parent element to be set fixed.
--------------------------------------------------------------------------*/

@mixin vertical-align {
	position: relative;
	top: 50%;
	@include transform(translateY(-50%));
}


/*--------------------------------------------------------------------------
	REM to PX for Fonts
	http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
	Usage: @include font-size(13);
--------------------------------------------------------------------------*/

@mixin font-size($sizeValue: 1.6, $line: $sizeValue * 1.5){
	font-size: ($sizeValue * 1) + px;
	//line-height: ($line * 1) + px;
	font-size: ($sizeValue / 10) + rem;
	//line-height: ($line / 10) + rem;
}


/*--------------------------------------------------------------------------

  Width, Margin and Padding Mixins
  - These calculate % using the famous RWD formula, target/context*100

--------------------------------------------------------------------------*/

// column widths
@mixin grid($target, $context)    {width: (($target/$context)*100%);}

// margin widths
@mixin mleft($target, $context)   {margin-left: (($target/$context)*100%);}
@mixin mright($target, $context)  {margin-right: (($target/$context)*100%);}

// padding widths
@mixin pleft($target, $context)   {padding-left: (($target/$context)*100%);}
@mixin pright($target, $context)  {padding-right: (($target/$context)*100%);}
